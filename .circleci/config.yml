# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  setup:
    docker:
      - image: circleci/php:7.1-node-browsers
    steps:
      - checkout
      - run: git config --global user.email "$GIT_AUTHOR_EMAIL"
      - run: git config --global user.name "$GIT_AUTHOR_NAME"
      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ./

  build:
    docker:
      - image: circleci/php:7.1-node-browsers
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ./

      - run: sudo apt update
      - run: sudo docker-php-ext-install zip

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer install --dev --prefer-dist

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor

      - run: ./vendor/bin/phpunit

  deploy-docs:
    docker:
      - image: circleci/php:7.1-node-browsers
    steps:
      - checkout
      - run: git config --global user.email "$GIT_AUTHOR_EMAIL"
      - run: git config --global user.name "$GIT_AUTHOR_NAME"

      - run: sudo apt update
      - run: sudo docker-php-ext-install zip

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer install --dev --prefer-dist

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor

      # run documentation build
      - run: ./vendor/bin/couscous deploy > /dev/null 2>&1

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - setup
      - build:
          requires:
            - setup
      # Only deploy docs on master.
      - deploy-docs
